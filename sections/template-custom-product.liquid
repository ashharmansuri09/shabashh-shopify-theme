<!-- Link Swiper's CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css">

{% style %}
     .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
      }
      .custom-product-main {
        display: grid;
        grid-template-columns: 1fr 1fr
    }
    .custom-product-images_thumbnails {
      padding: 30px 0;
      position: relative;
      height: fit-content;
  }
    .custom-product-images img.custom-product-images_main_img{
       width:100%;
           height: auto;
    }
    .custom-product-infos {
        padding-left: 50px;
    }
    .custom-product-images{
        display:grid;
        grid-template-columns: 80px 1fr;
        gap:15px;
    }
    .custom-thumbnail-item {
        width: 80px;
        height: 80px;
    }
    .custom-thumbnail-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    span.custom-product-vendor {
      text-transform: uppercase;
      font-size: small;
      font-weight: 600;
      color: gray;
  }
  h2.custom-product-title {
      margin: 0;
      margin: 10px 0;
      font-size: 48px;
      font-weight: 800;
  }
  .custom-product-price {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
  }
  span.custom-product-price-sale {
      background: lightgreen;
      padding: 0 20px;
      font-weight: 600;
      text-transform: uppercase;
  }
  span.custom-product-price-value {
      font-size: 22px;
      color: green;
      font-weight: 600;
  }
  span.custom-product-price-compare-at-price {
      font-size: 23px;
      font-weight: 800;
      color: lightgray;
      position: relative;

  }
  span.custom-product-price-compare-at-price::before{
      content: '';
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: 0;
      width: 100%;
      height: 2px;
      background-color: red;
  }
  legend.product-form_option-name {
      font-weight: 600;
  }
  fieldset.product-form_option {
      border: 0;
      padding-left: 0;
      margin-left: 0;
  }
  .product-form_option-values input {
      display: none;
  }
  .product-form_option-values label {
      padding: 1rem 1.8rem;
      border: 1px solid;
      border-radius: 4px;
      color: black;
      cursor: pointer;
      position: relative;

  }

  .product-form_option-values input:checked + label {
      background: black;
      color: white;
  }
  .product-form_option-values {
      display: flex;
      align-items: center;
      gap: 1rem;
  }
  .out-of-stock {
      opacity: 0.5;
  }
  label.line-strike-through::before{
    position:absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background: red;
  }

  .product-form_option-color label.product-form_option-value-swatch-img {
      padding: 0;
      width: 60px!important;
      height: 60px!important;
      display: block;
      border:none;
  }
  .product-form_option-color input:checked + label.product-form_option-value-swatch-img {
      border: 2px solid black;
  }
  label.product-form_option-value-swatch-img img {
      width: 100%;
      height: 100%;
      object-fit: cover;
  }
    /* Make arrows vertical (top & bottom) */
    .swiper-button-next,
      .swiper-button-prev {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
      }

      .swiper-button-next {
        top: auto;
        bottom: 0; /* move to bottom */
      }

      .swiper-button-prev {
        top: 0; /* move to top */
        bottom: auto;
      }

      .mySwiper {
        height: 500px; /* adjust depending on design */
        width: 80px;  /* adjust width for thumbnails */
        position: relative;
      }

      .swiper-slide img {
        display: block;
        height: auto;
        cursor: pointer;
      }
  .custom-product-images_thumbnails .swiper-button-next,
  .custom-product-images_thumbnails .swiper-button-prev {
      color: #000;
      transform: translateX(-50%) rotate(90deg);
  }
  .custom-product-images_thumbnails .swiper-button-next:after,
  .custom-product-images_thumbnails  .swiper-button-prev:after {
      font-size: 20px;
  }
  .custom-product-images_thumbnails .swiper-button-next {
      bottom: -15px;
  }
  .custom-product-images_thumbnails .swiper-button-prev {
      top: 10px;
  }
{% endstyle %}
<section class="section-{{ section.id }}-padding">
  <div class="page-width">
    <div class="custom-product-main">
      <div class="custom-product-images">
        {% if product.media.size > 0 %}
          <div class="custom-product-images_thumbnails">
            {% render 'custom-product-thumbnails', product %}
          </div>
        {% endif %}

        <div class="custom-product-images_main">
          {% if product.selected_or_first_available_variant.featured_image %}
            {% assign first_available_main_image = product.selected_or_first_available_variant.featured_image %}
          {% else %}
            {% assign first_available_main_image = product.featured_image %}
          {% endif %}

          <img
            srcset="
              {{ first_available_main_image | image_url: width: 360 }} 360w,
              {{ first_available_main_image | image_url: width: 720 }} 720w,
              {{ first_available_main_image | image_url: width: 1080 }} 1080w,
              {{ first_available_main_image | image_url: width: 1440 }} 1440w
            "
            sizes="(max-width: 840px) 100vw, 50vw"
            src="{{ first_available_main_image | image_url: width: 720 }}"
            alt="{{ product.title }}"
            width="720"
            height="788"
            loading="lazy"
            class="custom-product-images_main_img"
          >
        </div>
      </div>

      <div class="custom-product-infos">
        <span class="custom-product-vendor">{{ product.vendor }}</span>
        <h2 class="custom-product-title">{{ product.title }}</h2>
        <div class="custom-product-price">
          <span class="custom-product-price-value">
            {{- product.selected_or_first_available_variant.price | money_without_trailing_zeros -}}
          </span>
          {% if product.selected_or_first_available_variant.compare_at_price
              > product.selected_or_first_available_variant.price
          %}
            <span class="custom-product-price-compare-at-price">
              {{- product.selected_or_first_available_variant.compare_at_price | money_without_trailing_zeros -}}
            </span>
            <span class="custom-product-price-sale">Sale</span>
          {% endif %}
        </div>
        {% unless product.has_only_default_variant %}
          <variant-picker data-section-id="{{ section.id }}">
            {% for option in product.options_with_values %}
              <fieldset class="product-form_option {% if option.name == 'Color' %} product-form_option-color {% endif %}">
                {% if option.name == 'Color' %}
                  <legend class="product-form_option-name">
                    {{ option.name }}
                  </legend>
                  <div class="product-form_option-values">
                    {% for value in option.values %}
                      <div class="product-form_option-value {% unless value.variant.available %}out-of-stock{% endunless %}">
                        <input
                          value="{{ value.variant.id }}"
                          type="radio"
                          id="{{ option.name }}-{{ value.name }}"
                          name="{{ option.name }}"
                          {% if option.selected_value == value %}
                            checked
                          {% endif %}
                        >
                        {% comment %}
                          <label for="{{ option.name }}-{{ value.name }}"
                            class="{% unless value.variant.available %}line-strike-through{% endunless %} product-form_option-value-swatch-img">
                             <img src="{{ value.swatch.image | image_url: width: 50 }}" alt="{{ value.name }}" width="50" height="50">
                          </label>
                        {% endcomment %}
                        <label
                          for="{{ option.name }}-{{ value.name }}"
                          class="
                            {% unless value.variant.available %}line-strike-through{% endunless %}
                            {% if value.variant.image %} product-form_option-value-swatch-img {% endif %}
                          "
                        >
                          <img
                            src="{{ value.variant.image | image_url: width: 50 }}"
                            alt="{{ value.name }}"
                            width="50"
                            height="50"
                          >
                        </label>
                      </div>
                    {% endfor %}
                  </div>
                {% else %}
                  <legend class="product-form_option-name">
                    {{ option.name }}
                  </legend>
                  <div class="product-form_option-values">
                    {% for value in option.values %}
                      <div class="product-form_option-value {% unless value.variant.available %}out-of-stock{% endunless %}">
                        <input
                          value="{{ value.variant.id }}"
                          type="radio"
                          id="{{ option.name }}-{{ value.name }}"
                          name="{{ option.name }}"
                          {% if option.selected_value == value %}
                            checked
                          {% endif %}
                        >
                        <label
                          for="{{ option.name }}-{{ value.name }}"
                          class="{% unless value.variant.available %}line-strike-through{% endunless %}"
                        >
                          {{- value.name -}}
                        </label>
                      </div>
                    {% endfor %}
                  </div>
                {% endif %}
              </fieldset>
            {% endfor %}
          </variant-picker>
        {% endunless %}

        <div>
          {% render 'atc-button', product: product %}
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>

<!-- Initialize Swiper -->
{% comment %}
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      var swiper = new Swiper(".mySwiper", {
        direction: "vertical",
        slidesPerView: 4,
        spaceBetween: 10,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        mousewheel: true,
      });
    });
  </script>
{% endcomment %}

<script>
  class VariantPicker extends HTMLElement {
    constructor() {
      super();
      console.log('variant-picker');
    }

    get sectionId() {
      return this.dataset.sectionId;
    }

    connectedCallback() {
      this.variantSelector = this.querySelectorAll('input[type="radio"]');
      this.handleChange = this.handleChange.bind(this);

      this.variantSelector.forEach((selector) => {
        selector.addEventListener('change', this.handleChange);
      });

      // ✅ Initialize swiper once page + scripts fully load
      window.addEventListener("load", () => {
        this.initSwiper();
      });
    }

    disconnectedCallback() {
      this.variantSelector.forEach((selector) => {
        selector.removeEventListener('change', this.handleChange);
      });
    }

    handleChange(e) {
      const select = e.currentTarget;
      const url = `${window.location.pathname}?variant=${select.value}&section_id=${this.sectionId}`;

      fetch(url)
        .then((response) => response.text())
        .then((html) => {
          const tempDiv = document.createElement('div');
          tempDiv.innerHTML = html;

          document.querySelector('.custom-product-main').innerHTML =
            tempDiv.querySelector('.custom-product-main').innerHTML;

          const newUrl = new URL(url, window.location.origin);
          newUrl.searchParams.delete('section_id');
          window.history.pushState({}, '', newUrl.toString());

          // ✅ Re-init swiper after DOM update
          this.initSwiper();
        });
    }

    initSwiper() {
      if (typeof Swiper === "undefined") {
        console.warn("Swiper not ready yet, retrying...");
        setTimeout(() => this.initSwiper(), 100);
        return;
      }

      if (window.productSwiper) {
        window.productSwiper.destroy(true, true);
      }

      window.productSwiper = new Swiper(".mySwiper", {
        direction: "vertical",
        slidesPerView: 4,
        spaceBetween: 10,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev",
        },
        mousewheel: true,
      });
    }
  }

  customElements.define('variant-picker', VariantPicker);
</script>


{% schema %}
{
  "name": "Custom Product",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
