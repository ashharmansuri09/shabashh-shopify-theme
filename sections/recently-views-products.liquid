{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  .recently-viewed-grid {
    display: grid;
    grid-template-columns: repeat(4,1fr);
    gap: 15px;
}
.recent-item img{
    width: 100%;
    height: 300px;
}

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<section class="section-{{ section.id }}-padding">
  <div class="page-width">
    <h2 class="recently-views-products-title inline-richtext {{ section.settings.heading_size }}">{{ section.settings.title }}</h2>
        
        <recently-viewed-products class="recently-views-products-list">

        </recently-viewed-products>
  </div>
</section>

<script>

        (function() {
          var handle = "{{ product.handle }}";
          var key = "recentlyViewed";
          var viewed = JSON.parse(localStorage.getItem(key)) || [];
        
          // Remove if already exists
          viewed = viewed.filter(h => h !== handle);
          // Add at start
          viewed.unshift(handle);
          // Keep last 5 only
          viewed = viewed.slice(0, 5);
        
          localStorage.setItem(key, JSON.stringify(viewed));
        })();
    
        
    class RecentlyViewedProducts extends HTMLElement {
         constructor() {
            super();
            console.log('recently-viewed-products');
            this.key = "recentlyViewed";
            this.maxItems = this.getAttribute("max-items") || 5; // configurable
            this.container = document.createElement("div");
            this.container.className = "recently-viewed-grid";
            this.appendChild(this.container);
         }
         connectedCallback() {
            const viewed = JSON.parse(localStorage.getItem(this.key)) || [];
            if (!viewed.length) {
              this.style.display = "none"; // hide if nothing viewed
              return;
            }
        
            viewed.slice(0, this.maxItems).forEach(handle => {
              fetch(`/products/${handle}.js`)
                .then(resp => resp.json())
                .then(product => this.renderProduct(product));
            });
          }
          renderProduct(product) {
            const item = document.createElement("div");
            item.className = "recent-item";
            item.innerHTML = `
              <a href="/products/${product.handle}" class="recently-viewed-product-link">
                <img src="${product.images[0]}" alt="${product.title}" loading="lazy"/>
                <p>${product.title}</p>
                <p>${(product.price / 100).toFixed(2)} ${Shopify.currency.active}</p>
              </a>`;
            this.container.appendChild(item);
          }
    }
    customElements.define('recently-viewed-products', RecentlyViewedProducts);
</script>
{% schema %}
{
  "name": "Recently Views Products",
  "settings": [
    {
        "type": "inline_richtext",
        "id": "title",
        "default": "t:sections.collection-list.settings.title.default",
        "label": "t:sections.collection-list.settings.title.label"
      },
      {
        "type": "select",
        "id": "heading_size",
        "options": [
          {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
          },
          {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
          },
          {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
          },
          {
            "value": "hxl",
            "label": "t:sections.all.heading_size.options__4.label"
          },
          {
            "value": "hxxl",
            "label": "t:sections.all.heading_size.options__5.label"
          }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
  ],
  "presets": [
    {
      "name": "Recently Views Products"
    }
  ]
}
{% endschema %}
